<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jsg.house.user.model.mapper.UserMapper">
	
	
	<resultMap type="user" id="userDto" >
		<result column="id" property="id"/>
		<result column="email" property="email"/>
		<result column="password" property="password"/>
		<result column="nick_name" property="nickName"/>
		<result column="reg_date" property="regDate"/>
		<result column="location" property="location"/>
		<result column="grade" property="grade"/>
	</resultMap>
	
	<select id="getUserList" resultMap="userDto">
		SELECT * FROM user
	</select>
	
	<select id="checkAdmin" parameterType="int" resultType="int">
		SELECT count(*) 
		FROM user
		WHERE id = #{id} and grade >= 1
	</select>
	<select id="checkNick" parameterType="string" resultType="int">
		SELECT count(id) 
		FROM user
		WHERE nick_name = #{nickName}
	</select>
	<select id="loginUser" parameterType="map" resultMap="userDto">
		SELECT id, email, nick_name, reg_date, location, grade
		FROM user
		WHERE email = #{email} AND password = #{password} AND grade != -1;
	</select>
	
	<select id="findUserByEmail" parameterType="string" resultType="int">
		Select id from user where email = #{email}
	</select>
	<select id="findUserByOauth" parameterType="string" resultType="int">
		SELECT id, email, nick_name, reg_date, location, grade
		FROM user
		WHERE oauth = #{oauth}
	</select>
	<insert id="registUser" parameterType="user">
		INSERT INTO user (email, password, nick_name)
		VALUES (#{email},#{password}, #{nickName})
	</insert>
	<insert id="registOauthUser" parameterType="user">
		INSERT INTO user (email, password, nick_name, oauth)
		VALUES (#{email},#{password}, #{nickName}, #{oauth})
	</insert>
	
	<update id="deleteUser" parameterType="int">
		UPDATE user 
		SET grade = -1 
		WHERE id = #{id}
	</update>
	
	<update id="addAdmin" parameterType="int">
		UPDATE user 
		SET grade = 1 
		WHERE id = #{id}
	</update>
	
	<delete id="deleteForceUser" parameterType="int">
		DELETE FROM user
		WHERE id = #{id}
	</delete>
	
	<select id="detailUser" parameterType="int" resultMap="userDto">
		SELECT id, email, password, nick_name, grade, concat(d.sido_name,' ', d.gugun_name) location
		FROM user u join dongcode d on u.location = d.dong_code
		WHERE id = #{id}
	</select>
	
	<update id="modifyUser" parameterType="map">
		UPDATE user 
		SET
		<trim suffixOverrides=",">
			<if test="nickName != null">
				nick_name = #{nickName},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="location != null">
				location = #{location},
			</if>
		</trim>
		WHERE
			id = #{id}
	</update>
	<select id="countOauth" resultType="int">
		SELECT COUNT(*) FROM user where oauth IS NOT NULL
	</select>
	
	<update id="addUserOauth" parameterType="map">
		UPDATE user 
		SET
			oauth = #{oauth}
		WHERE
			id = #{id}
	</update>
	
</mapper>